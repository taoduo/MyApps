doctype html
html
	head
		title Check My Notes
		script(src='/jquery/dist/jquery.min.js' type='text/javascript')
		link(rel='stylesheet', href="/bootstrap/dist/css/bootstrap.min.css")
		script(src="/bootstrap/dist/js/bootstrap.min.js" type='text/javascript')
		script(src='/tinymce/tinymce.min.js' type='text/javascript')
		script(src='/jquery-form/jquery.form.js')
		script(type='text/javascript').
			//configure the initial values of the edit form for different notes
			$(document).on('click', '.editbtn', function(e) {
				var tag = $(this).data('tag');
				var title = $(this).data('title');
				var details = $(this).data('details');
				var keywords = $(this).data('keywords');
				var id = $(this).data('id');
				var date = new Date(Date.parse($(this).data('date')));
				if($('#editform').length) {
					$('#editform').show();
				} else {
					alert('it does not exist');
				}
				$('#editform #tag').val(tag);
				$('#editform #title').val(title);
				tinyMCE.activeEditor.setContent(details);
				$('#editform #keywords').val(keywords);
				$('#id').val('(#' + id + ')');
			});
			//get ready for submit
			$(document).ready(function(){
				$('#editform').submit(function(event) {
					//submit the form
					event.preventDefault();
					var thisForm=$(this);
					var formUrl='http://localhost:3000/checknotes';
					var dataToSend=thisForm.serialize();
					var callBack=function(responseText) {
						console.log(3);
						var date = new Date(Date.parse(responseText.date));
						var datestr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
						var keywords = responseText.keywords;
						$('#' + responseText._id + 'tag').html(responseText.tag);
						$('#' + responseText._id + 'title').html(responseText.title + ' ');
						$('#' + responseText._id + 'keywords').empty();
						for(var i in keywords){
							$('#' + responseText._id + 'keywords').append('<span class=\'label label-success\'>' + keywords[i] + '</span>&nbsp;');
						}
						$('#' + responseText._id + 'date').html(datestr);
						$('#noteslist').prepend($('#' + responseText._id));
					};
					var rtnType="html";
					$.post(formUrl,dataToSend,callBack);
					return false;
				});
				//initialize the tinymce textarea in the modal
				tinymce.init({
					setup: function(editor) {
						editor.on('focus', function() {
							if(editor.getContent() === '<p>Default_Details</p>')
							editor.setContent('');
						});
						editor.on('blur', function() {
							if(editor.getContent() === '') {
								editor.setContent('Default_Details');
							};
						});
					},
					theme: 'modern',
					selector: '#details',
					height: 250,
					paste_data_images: true,
					plugins: [
					'advlist autolink lists link image charmap preview hr anchor pagebreak',
					'searchreplace wordcount visualblocks visualchars code fullscreen',
					'insertdatetime media nonbreaking save table contextmenu directionality',
					'emoticons template paste textcolor colorpicker textpattern imagetools'
					],
					menu: [],
					toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | forecolor backcolor',
					image_advtab: true,
					templates: [
					{ title: 'Test template 1', content: 'Test 1' },
					{ title: 'Test template 2', content: 'Test 2' }
					],
					content_css: [
					'/stylesheets/tinymce.css',
					]
				});
			});

			//delete a note
			function del(id, title) {
				$.ajax({
					url: 'http://localhost:3000/checknotes',
					method: 'delete',
					data: {'id':id},
					beforeSend: function(){
						alert('Are you sure to delete ' + title + '?');
					},
					success: function(data) {
						console.log('haha');
						if(data === 'deleted') {
							$('#' + id).remove();
						} else if(data === 'err') {
							alert('Deletion fail with error.');
						}
					}
				});
			}
			//submit the edit form
			function formSubmit() {
				tinyMCE.triggerSave();
				$('#editform').submit();
			}
	body
		ul#noteslist.list-group
			each val, index in notes
				li(id=val.id)
					span.label.label-primary(id=val.id + 'tag')= val.tag
					a.list-group-item
						b(id=val.id + 'title')=val.title + ' '
						div(id=val.id + 'keywords' style='display:inline;')
							each k in val.keywords
								span.label.label-success= k
								|&nbsp;
						.pull-right
							span(id=val.id + 'date')=(val.date.getFullYear() + '-' + (val.date.getMonth() + 1) + '-' + val.date.getDate())
							|&nbsp;
							button.editbtn.btn.btn-default.btn-xs(data-toggle='modal' data-target='#editmodal' data-title=val.title data-tag=val.tag data-details=val.details data-keywords=val.keywords data-id=val.id data-date=val.date)
								span.glyphicon.glyphicon-edit
							|&nbsp;
							button.btn.btn-default.btn-xs(onclick='del(\'' + val.id + '\',\'' + val.title + '\')')
								span.glyphicon.glyphicon-trash
		#editmodal.modal.fade(role='dialog')
			.modal-dialog
				.modal-content
					.modal-header
						button.close(type='button' data-dismiss='modal')&times;
						h4#modaltitle.modal-title(style='display:inline;') Edit A Note
					.modal-body
						form#editform.form-horizontal(role='form')
							.form-group
								label.control-label.col-sm-2(for='tag') Tag:
								.col-sm-10
									input#tag.form-control(type='text' name='tag')
							.form-group
								label.control-label.col-sm-2(for='title') Title:
								.col-sm-10
									input#title.form-control.col-sm-10(type='text' name='title')
							.form-group
								label.control-label.col-sm-2(for='keywords') Keywords:
								.col-sm-10
									input#keywords.form-control.col-sm-10(type='text' name='keywords')
							.form-group
								label.control-label.col-sm-2(for='id') ID:
								.col-sm-10
									input#id.form-control(name='id' readonly)
							.form-group
								label.control-label.col-sm-2(for='details') Details:
								.col-sm-10
									textarea#details.form-control(name='details')
					.modal-footer
						button#submitButton.btn.btn-success(data-dismiss='modal' onclick='formSubmit()' type='button') Submit
						button.btn.btn-default(data-dismiss='modal' type='button') Close
